# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-09 11:14
from __future__ import unicode_literals

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import events.models.event


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0002_auto_20180322_2302'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('language', models.CharField(max_length=30, verbose_name='language')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('registration_end_date', models.DateTimeField(blank=True, null=True, verbose_name='registration end date')),
                ('price', models.IntegerField(default=0, verbose_name='price')),
                ('attendance_cap', models.IntegerField(blank=True, null=True, verbose_name='attendance cap')),
                ('is_host_ntnui', models.BooleanField(default=False, verbose_name='hosted by NTNUI')),
                ('place', models.CharField(blank=True, max_length=50, verbose_name='place')),
                ('priority', models.BooleanField(default=False, verbose_name='priority')),
                ('cover_photo', models.ImageField(default='cover_photo/events/ntnui-volleyball.png', upload_to=events.models.event.Event.get_cover_upload_to)),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='EventDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('language', models.CharField(max_length=30, verbose_name='language')),
                ('description_text', models.CharField(max_length=500, verbose_name='description')),
                ('custom_email_text', models.CharField(blank=True, max_length=250, null=True, verbose_name='email text')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
            },
        ),
        migrations.CreateModel(
            name='EventGuestRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
            ],
            options={
                'verbose_name': 'attendee, guest',
                'verbose_name_plural': 'attendees, guests',
            },
        ),
        migrations.CreateModel(
            name='EventGuestWaitingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
            ],
            options={
                'verbose_name': 'waiting list, guest',
                'verbose_name_plural': 'waiting list, guests',
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='attendee')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'attendee, user',
                'verbose_name_plural': 'attendees, users',
            },
        ),
        migrations.CreateModel(
            name='EventWaitingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='attendee')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'waiting list, user',
                'verbose_name_plural': 'waiting list, users',
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('phone_number', models.IntegerField(verbose_name='phone number')),
            ],
            options={
                'verbose_name': 'guest',
                'verbose_name_plural': 'guests',
            },
        ),
        migrations.CreateModel(
            name='Restriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'restriction',
                'verbose_name_plural': 'restrictions',
            },
        ),
        migrations.CreateModel(
            name='SubEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('registration_end_date', models.DateTimeField(blank=True, null=True, verbose_name='registration end date')),
                ('price', models.IntegerField(default=0, verbose_name='price')),
                ('attendance_cap', models.IntegerField(blank=True, null=True, verbose_name='attendance cap')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'sub-event',
                'verbose_name_plural': 'sub-events',
            },
        ),
        migrations.CreateModel(
            name='SubEventDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('language', models.CharField(max_length=30, verbose_name='language')),
                ('custom_email_text', models.CharField(blank=True, max_length=250, null=True, verbose_name='email text')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.SubEvent', verbose_name='sub-event')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
            },
        ),
        migrations.CreateModel(
            name='SubEventGuestRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Guest', verbose_name='attendee')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.SubEvent', verbose_name='sub-event')),
            ],
            options={
                'verbose_name': 'attendee, guest',
                'verbose_name_plural': 'attendees, guests',
            },
        ),
        migrations.CreateModel(
            name='SubEventGuestWaitingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Guest', verbose_name='attendee')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.SubEvent', verbose_name='sub-event')),
            ],
            options={
                'verbose_name': 'waiting list, guest',
                'verbose_name_plural': 'waiting list, guests',
            },
        ),
        migrations.CreateModel(
            name='SubEventRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='attendee')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.SubEvent', verbose_name='sub-event')),
            ],
            options={
                'verbose_name': 'attendee, user',
                'verbose_name_plural': 'attendees, users',
            },
        ),
        migrations.CreateModel(
            name='SubEventWaitingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(verbose_name='registration time')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('token', models.CharField(blank=True, max_length=60, null=True, verbose_name='token')),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='attendee')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.SubEvent', verbose_name='sub-event')),
            ],
            options={
                'verbose_name': 'waiting list, user',
                'verbose_name_plural': 'waiting list, users',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.AddField(
            model_name='subevent',
            name='tags',
            field=models.ManyToManyField(blank=True, to='events.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='eventguestwaitinglist',
            name='attendee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Guest', verbose_name='attendee'),
        ),
        migrations.AddField(
            model_name='eventguestwaitinglist',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event'),
        ),
        migrations.AddField(
            model_name='eventguestregistration',
            name='attendee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Guest', verbose_name='attendee'),
        ),
        migrations.AddField(
            model_name='eventguestregistration',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event'),
        ),
        migrations.AddField(
            model_name='event',
            name='restriction',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='events.Restriction', verbose_name='restriction'),
        ),
        migrations.AddField(
            model_name='event',
            name='sports_groups',
            field=models.ManyToManyField(blank=True, to='groups.SportsGroup', verbose_name='hosted by'),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(blank=True, to='events.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='category',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event'),
        ),
        migrations.AlterUniqueTogether(
            name='subeventwaitinglist',
            unique_together=set([('sub_event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='subeventregistration',
            unique_together=set([('sub_event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='subeventguestwaitinglist',
            unique_together=set([('sub_event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='subeventguestregistration',
            unique_together=set([('sub_event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventwaitinglist',
            unique_together=set([('event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventregistration',
            unique_together=set([('event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventguestwaitinglist',
            unique_together=set([('event', 'attendee')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventguestregistration',
            unique_together=set([('event', 'attendee')]),
        ),
    ]
