# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-05 14:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0005_auto_20180216_1532'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('language', models.CharField(max_length=30, verbose_name='language')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
            },
        ),
        migrations.CreateModel(
            name='Restriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'restricton',
                'verbose_name_plural': 'restrictions',
            },
        ),
        migrations.CreateModel(
            name='SubEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('attending_members', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='attending members')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'subEvnet',
                'verbose_name_plural': 'subEvents',
            },
        ),
        migrations.CreateModel(
            name='SubEventDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('language', models.CharField(max_length=30, verbose_name='language')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.SubEvent', verbose_name='subevent')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='place',
            field=models.CharField(blank=True, max_length=50, verbose_name='place'),
        ),
        migrations.AddField(
            model_name='subevent',
            name='tags',
            field=models.ManyToManyField(blank=True, to='events.Tag', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='category',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='event'),
        ),
        migrations.AddField(
            model_name='event',
            name='restriction',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='events.Restriction', verbose_name='restriction'),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(blank=True, to='events.Tag', verbose_name='tags'),
        ),
    ]
